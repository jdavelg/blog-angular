{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/category-detail/category-detail.component.ts","webpack:///src/app/components/category-detail/category-detail.component.html","webpack:///src/app/components/category-new/category-new.component.ts","webpack:///src/app/components/category-new/category-new.component.html","webpack:///src/app/components/error/error.component.ts","webpack:///src/app/components/error/error.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/post-detail/post-detail.component.ts","webpack:///src/app/components/post-detail/post-detail.component.html","webpack:///src/app/components/post-edit/post-edit.component.ts","webpack:///src/app/components/post-new/post-new.component.html","webpack:///src/app/components/post-list/post-list.component.ts","webpack:///src/app/components/post-new/post-new.component.ts","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/user-edit/user-edit.component.ts","webpack:///src/app/components/user-edit/user-edit.component.html","webpack:///src/app/models/category.ts","webpack:///src/app/models/post.ts","webpack:///src/app/models/user.ts","webpack:///src/app/services/category.service.ts","webpack:///src/app/services/global.ts","webpack:///src/app/services/identity.guard.ts","webpack:///src/app/services/post.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_userService","_categoryService","title","loadUser","url","console","log","getCategories","identity","getIdentity","token","getToken","subscribe","response","status","categories","error","selector","templateUrl","styleUrls","providers","AppModule","declarations","imports","bootstrap","appRoutes","path","component","canActivate","appRoutingProviders","routing","forRoot","CategoryDetailComponent","_route","_router","_postSerive","page_title","getPostsByCategory","params","getCategory","category","getPosts","posts","navigate","CategoryNewComponent","form","create","onSubmit","ErrorComponent","HomeComponent","_postService","getposts","LoginComponent","user","logout","signup","localStorage","setItem","JSON","stringify","removeItem","PostDetailComponent","getPost","Number","post","PostEditComponent","afuConfig","multiple","formatsAllowed","maxSize","uploadAPI","headers","theme","hideProgressBar","hideResetBtn","hideSelectBtn","attachPinText","froala_options","charCounterCount","language","toolbarButtons","toolbarButtonsXS","toolbarButtonsSM","toolbarButtonsMD","is_edit","sub","user_id","data","image_data","parse","image","update","imageUpload","deletePost","PostListComponent","PostNewComponent","ProfileComponent","getprofile","userId","getUser","RegisterComponent","register","reset","UserEditComponent","name","surname","email","description","changes","datos","avatarUpload","Category","Post","category_id","content","created_at","User","role","password","CategoryService","_http","json","set","get","providedIn","global","htmlEntities","str","String","replace","IdentityGuard","PostService","put","UserService","gettoken","getItem","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { UserService } from './services/user.service';\nimport { global } from \"../app/services/global\";\nimport { CategoryService } from './services/category.service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers:[\n    UserService,\n    CategoryService\n  ]\n})\nexport class AppComponent implements OnInit, DoCheck {\n  title = 'blog-angular';\n  public identity;\n  public token;\npublic url;\npublic status;\npublic categories;\n\n\n  constructor( \n    private _userService:UserService,\n    private _categoryService:CategoryService\n  ){\nthis.loadUser();\nthis.url=global.url\n  }\n\n\n  ngOnInit(): void {\n   console.log(\"WebApp cargada correctamente c:\");\n   this.getCategories();\n   \n  }\n\n  ngDoCheck(){\n   this.loadUser();\n  }\n\n  loadUser(){\n    this.identity=this._userService.getIdentity();\n    this.token=this._userService.getToken();\n  }\n\n  getCategories(){\n    this._categoryService.getCategories().subscribe(\n      response=>{\nif(response.status==\"success\"){\nthis.categories= response.categories;\nconsole.log(this.categories)\n}\n\n      },\n      error=>{\nthis.status=\"error\";\nconsole.log(<any>error)\n      }\n    )\n  }\n}\n","<div class=\"container\">\n  <!-- Contenedor principal -->\n  <br>\n\n  <!-- Barra de navegacion -->\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-info\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"assets/images/angular.png\" width=\"30\" height=\"30\" alt=\"\">NG_Blog</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" [routerLink]=\"[ '/inicio' ]\">Inicio <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\" *ngFor=\"let category of categories\">\n          <a class=\"nav-link\" [routerLink]=\"[ '/categoria', category.id ]\">{{category.name}}</a>\n        </li>\n\n      </ul>\n\n      <ul class=\"navbar-nav navbar-right\" *ngIf=\"!identity\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" [routerLink]=\"[ '/login' ]\">Login <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" [routerLink]=\"[ '/registro' ]\">Registro</a>\n          </li>\n  \n        </ul>\n\n      </ul>\n\n\n      <ul class=\"navbar-nav navbar-right\" *ngIf=\"identity && identity.name\">\n        <div *ngIf=\"identity && identity.image\">\n          <img src=\"{{url+ 'user/avatar/'+identity.image}}\" style=\" vertical-align: middle;\n          width: 50px;\n          height: 50px;\n          border-radius: 50%;\">\n      </div>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n            aria-haspopup=\"true\" aria-expanded=\"false\">\n          {{identity.name +' '+identity.surname}}\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" [routerLink]=\"[ '/crear-entrada']\">Crear entrada</a>\n            <a class=\"dropdown-item\" [routerLink]=\"[ '/crearcategoria']\">Crear categoria</a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" [routerLink]=\"[ '/perfil', identity.sub]\">Mi perfil</a>\n            <a class=\"dropdown-item\" [routerLink]=\"[ '/ajustes']\">Ajustes</a>\n            <a class=\"dropdown-item\" [routerLink]=\"[ '/logout/1']\">Cerrar Sesion</a>\n          </div>\n        </li>\n        \n        \n      </ul>\n\n    </div>\n  </nav>\n  <!-- fin barra de navegacion -->\n\n\n<!-- Contenido -->\n\n<router-outlet></router-outlet>\n\n\n\n\n\n<footer>\n  <hr>\n  JavaScript, jonathan Lopez &copy;\n  <hr>\n</footer>\n</div>\n<!-- fin principal container -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\n/* import { FroalaEditorModule, FroalaViewModule } from \"angular-froala-wysiwyg\"; */\nimport { routing, appRoutingProviders } from \"./app.routing\";\nimport { AngularFileUploaderModule } from \"angular-file-uploader\";\n\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\n\nimport { CategoryNewComponent } from './components/category-new/category-new.component';\nimport { PostNewComponent } from './components/post-new/post-new.component';\nimport { PostDetailComponent } from './components/post-detail/post-detail.component';\nimport { PostEditComponent } from './components/post-edit/post-edit.component';\nimport { CategoryDetailComponent } from './components/category-detail/category-detail.component';\nimport { IdentityGuard } from './services/identity.guard';\nimport { UserService } from './services/user.service';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PostListComponent } from './components/post-list/post-list.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ErrorComponent,\n    UserEditComponent,\n \n    CategoryNewComponent,\n \n    PostNewComponent,\n \n    PostDetailComponent,\n \n    PostEditComponent,\n \n    CategoryDetailComponent,\n \n    ProfileComponent,\n \n    PostListComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n/*     FroalaEditorModule.forRoot(),\n     FroalaViewModule.forRoot(), */\n     AngularFileUploaderModule,\n  ],\n  providers: [\n    appRoutingProviders,\n    IdentityGuard,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\n//import necesarios\r\nimport { ModuleWithProviders } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\n\r\n//import components\r\n\r\n\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { RegisterComponent } from \"./components/register/register.component\";\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ErrorComponent } from './components/error/error.component';\r\nimport { UserEditComponent } from './components/user-edit/user-edit.component';\r\nimport { CategoryNewComponent } from './components/category-new/category-new.component';\r\nimport { PostNewComponent } from './components/post-new/post-new.component';\r\nimport { PostDetailComponent } from './components/post-detail/post-detail.component';\r\nimport { PostEditComponent } from './components/post-edit/post-edit.component';\r\nimport { CategoryDetailComponent } from './components/category-detail/category-detail.component';\r\nimport { IdentityGuard } from './services/identity.guard';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\n\r\n//definir las rutas\r\nconst appRoutes:Routes =[\r\n{ path: '', component: HomeComponent },\r\n{ path: '/', component: HomeComponent },\r\n{ path: 'inicio', component: HomeComponent },\r\n{ path: 'login', component: LoginComponent },\r\n{ path: 'registro', component: RegisterComponent },\r\n{ path: 'ajustes', component: UserEditComponent, canActivate:[IdentityGuard] },\r\n{ path: 'crearcategoria', component: CategoryNewComponent , canActivate:[IdentityGuard] },\r\n{ path: 'crear-entrada', component: PostNewComponent , canActivate:[IdentityGuard] },\r\n{ path: 'entrada/:id', component: PostDetailComponent },\r\n{ path: 'editar-entrada/:id', component: PostEditComponent },\r\n{ path: 'categoria/:id', component: CategoryDetailComponent},\r\n{ path: 'perfil/:id', component: ProfileComponent },\r\n{ path: 'logout/:sure', component: LoginComponent },\r\n{ path: '**', component: ErrorComponent },\r\n\r\n\r\n];\r\n\r\n//exportar configuracion\r\nexport const appRoutingProviders:any[]=[];\r\nexport const routing: ModuleWithProviders<any>= RouterModule.forRoot(appRoutes);\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Category } from 'src/app/models/category';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { UserService } from 'src/app/services/user.service';\n\nimport { global } from \"../../services/global\";\nimport { PostService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-category-detail',\n  templateUrl: './category-detail.component.html',\n  styleUrls: ['./category-detail.component.css'],\n  providers:[\n    CategoryService,\n    UserService,\n    PostService\n  ]\n})\nexport class CategoryDetailComponent implements OnInit {\npublic page_title:string;\npublic category:Category;\npublic posts:any;\npublic url:string;\npublic identity;\npublic token;\n\n  constructor(\n    private _route:ActivatedRoute,\n    private _router:Router,\n    private _categoryService: CategoryService,\n    private _userService:UserService,\n    private _postSerive:PostService\n  ) { \n\nthis.url=global.url;\n    this.page_title=\"Categoria\";\n    this.identity= this._userService.getIdentity();\n    this.token=this._userService.getToken();\n  }\n\n  ngOnInit(): void {\n    this.getPostsByCategory();\n  }\n\ngetPostsByCategory():any{\n\n  this._route.params.subscribe(params=>{\n\nlet id=+params['id'];\n\nthis._categoryService.getCategory(id).subscribe(\n\n  response=>{\nif(response.status== \"success\"){\nthis.category= response.category;\nthis._categoryService.getPosts(id).subscribe(\n\n  response=>{\n    if (response.status==\"success\") {\n      this.posts= response.posts\n    } else {\n      this._router.navigate(['/inicio'])\n    }\n\n  },\n  error=>{\n    console.log(error);\n    \n  }\n)\n\n\n}else{\n  this._router.navigate(['/inicio'])\n}\n\n\n  },\n  error=>{\n    console.log(error);\n    \n  }\n)\n  });\n}\n\n}\n","<div class=\"loading\" *ngIf=\"!category\">\nCargando...\n\n</div>\n\n<div class=\"container-fluid mt-3\" *ngIf=\"category\">\n<h1>{{page_title}}-{{category.name}}</h1>\n<div class=\"card-colums\" *ngIf=\"!posts\">\nCargando Publicaciones...\n</div>\n\n<div class=\" alert alert-warning\" *ngIf=\"posts.length ==0\">\nAun no hay entradas para mostrar en esta categoria\n</div>\n\n\n\n<div class=\"card-colums\" *ngIf=\"posts\">\n\n    <article class=\"card w-100\" *ngFor=\"let post of posts\">\n<div class=\"card-header\">\n        <h3><a [routerLink]=\"[ '/entrada', post.id]\">{{post.title}}</a></h3>\n</div>\n\n\n<div class=\"card-body\">\n<!-- imagen -->\n<div class=\"post-image w-100\" *ngIf=\"post.image\">\n<img src=\"{{url+'post/image/' + post.image}}\" class=\"w-100\">\n</div>\n<div class=\"post-image w-100\" *ngIf=\"!post.image\">\n    <img src=\"https://via.placeholder.com/500x300\" class=\"w-100\">\n    </div>\n<!-- Botones de Accion -->\n<div class=\"post-buttons mt-5\">\n\n    <a [routerLink]=\"[ '/entrada', post.id ]\" class=\"btn btn-info mr-2\">Leer</a>\n\n</div>\n\n</div>\n    </article>\n</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { Category } from 'src/app/models/category';\nimport { CategoryService } from 'src/app/services/category.service';\n\n\n\n\n@Component({\n  selector: 'app-category-new',\n  templateUrl: './category-new.component.html',\n  styleUrls: ['./category-new.component.css'], \n  providers:[\nUserService,\nCategoryService\n  ]\n})\nexport class CategoryNewComponent implements OnInit {\n\npublic page_title:string;\npublic identity;\npublic token;\npublic category:Category;\npublic status;\n\n\n  constructor(\n    private _router:Router,\n    private _route:ActivatedRoute,\n    private _userService: UserService,\n    private _categoryService: CategoryService\n\n  ) {\n    \n    this.page_title=\"Crear Nueva Categoria\";\n    this.identity=this._userService.getIdentity();\n    this.token=this._userService.getToken();\n    this.category= new Category(1, '');\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form){\n\n    this._categoryService.create(this.token, this.category).subscribe(\n      response=>{\n\nif (response.status==\"success\") {\n\n  this.category= response.category;\n  this.status=\"success\";\n  this._router.navigate(['/inicio'])\n}else{\n  this.status=\"error\"\n}\n\n\n      },\n      error=>{\nthis.status=\"error\";\nconsole.log(<any>error);\n\n      }\n    )\n    \n  }\n\n}\n","<div class=\"col-md-12 mt-3\">\n\n\n    <h2>{{page_title}}</h2>\n    \n    <p>\n       Agrega una nueva categoria para el Blog\n    </p>\n    <hr>\n    \n    \n   <ng-container *ngIf=\"status== 'success'\">\n        <div class=\"alert alert-success\" role=\"alert\" > \n            La categoria se ha creado correctamente   \n            </div>\n    </ng-container>\n    \n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"status== 'error'\"> \n       La categoria no se ha guardado\n            </div> \n    \n    \n    \n    <!-- Formulario de crear categoria -->\n    \n  <form #categoryForm=\"ngForm\"  (ngSubmit)=\"onSubmit(categoryForm)\" class=\"col-md-5\">\n\n\n   <div class=\"form-group\">\n<label for=\"name\">Nombre</label>\n<input type=\"text\" name=\"name\"  class=\"form-control\" #name=\"ngModel\" [(ngModel)]=\"category.name\" required>\n\n<small *ngIf=\"!name.valid && name.touched\" class=\"invalid-feedback d-block\"> \n    El nombre de la categoria no es valido\n</small>\n   </div>\n\n<input type=\"submit\" value=\"Guardar\" class=\"btn btn-success\" [disabled]=\"categoryForm.invalid\">\n\n\n  </form>\n    \n<br>\n    \n    \n    </div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\npublic page_title:string;\n  constructor() {\n\n    this.page_title=\"Pagina no encontrada\"\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n<h1>{{page_title}}</h1>\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from 'src/app/models/post';\nimport { PostService } from 'src/app/services/post.service';\nimport { global } from \"../../services/global\";\nimport { UserService } from 'src/app/services/user.service';\n\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  providers:[\nPostService,\nUserService\n\n  ]\n})\nexport class HomeComponent implements OnInit {\npublic page_title:string;\npublic url:string;\npublic posts: Array<Post>;\npublic identity;\npublic token;\n\n  constructor(\n    private _postService: PostService,\n    private _userService:UserService\n  ) { \n\n    this.page_title=\"Inicio\";\n    this.url=global.url;\n    this.identity= this._userService.getIdentity();\n    this.token=this._userService.getToken();\n  }\n\n  ngOnInit(): void {\n    this.getposts();\n  }\n\n  getposts(){\n    this._postService.getPosts().subscribe(\nresponse=>{\nif (response.status==\"success\") {\n  \nthis.posts=response.posts;\n\n\n\n}\n},\nerror=>{\nconsole.log(<any>error);\n\n\n}\n\n    );\n  }\n\n}\n","<div class=\"loading\" *ngIf=\"!posts\">\nCargando...\n\n</div>\n\n<div class=\"container-fluid mt-3\" *ngIf=\"posts\">\n<h1>{{page_title}}</h1>\n\n<div class=\"card-colums\">\n\n\n\n\n    <div class=\"card\" *ngFor=\"let post of posts\">\n        <img src=\"{{url+'post/image/' + post.image}}\" class=\"card-img-top\" *ngIf=\"post.image\">\n        <img src=\"https://via.placeholder.com/500x300\" class=\"card-img-top\" *ngIf=\"!post.image\">\n        <div class=\"card-body\">\n          <h3 class=\"card-title\"><a [routerLink]=\"[ '/entrada', post.id]\">{{post.title}}</a></h3>\n          <p class=\"card-text\"><a [routerLink]=\"[ '/entrada', post.id]\">Puedes ver el post dando click aqui</a></p>\n        </div>\n\n\n\n\n\n    <!-- <div class=\"card row-cols-1 row-cols-md-3\" *ngFor=\"let post of posts\">\n<div class=\"card-header\">\n        <h3><a [routerLink]=\"[ '/entrada', post.id]\">{{post.title}}</a></h3>\n</div>\n\n<div class=\"card-body\">\n\n<div class=\"post-image \" *ngIf=\"post.image\" class=\"h-100\">\n<img src=\"{{url+'post/image/' + post.image}}\" class=\"w-100\">\n</div>\n<div class=\"post-image w-100 h-100\" *ngIf=\"!post.image\">\n    <img src=\"https://via.placeholder.com/500x300\" class=\"w-100\">\n    </div>\n\n<div class=\"post-buttons mt-5\">\n\n    <a [routerLink]=\"[ '/entrada', post.id ]\" class=\"btn btn-info mr-2\">Leer</a>\n\n</div>\n\n</div>\n</div> -->\n</div>\n\n</div>","import { Component, OnInit, DoCheck } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers:[\n    UserService\n  ]\n})\nexport class LoginComponent implements OnInit {\n\npublic page_title:string;\npublic user:User;\npublic status:string;\npublic token;\npublic identity;\n\n  constructor( private _userService:UserService,\n    private _router:Router,\n    private _route:ActivatedRoute,\n    \n    ) { \n\n    this.page_title= \"identificate\";\n    this.user = new User(1, '', '', 'user', '', '', '', '');\n  }\n\n  ngOnInit(): void {\n//se ejecuta siempre y cierra sesion solo cuando le llega el parametro sure por la url\n    this.logout();\n  }\n\n\n  onSubmit(form):any{\n\nthis._userService.signup(this.user).subscribe(\n  response=>{\n\n  //devuelve el token\n  if (status!=\"error\") {\n  this.status=\"success\";\n  this.token=response;\n  //objeto usuario identificado\n\n  this._userService.signup(this.user,true).subscribe(\n    response=>{\n  \n    \n    this.identity=response;\n    console.log(this.identity);\n    console.log(this.token);\n\n\n    //persistir datos de usuario identificado en LocalStorage\n    localStorage.setItem('token',this.token);\n    localStorage.setItem('identity', JSON.stringify(this.identity));\n\n    //redirigir a inicio\n    this._router.navigate(['inicio']);\n\n  },\n        error=>{\n    \n        this.status=\"error\";\n        console.log(<any>error);\n    \n    }) \n\n  \n  }else{\n    this.status=\"error\";\n  }\n},  \n  error=>{\n    if (this.status==\"error\") {\n      this.status=\"error\";\n      console.log(<any>error);\n    }   \n    \n  }\n);\n\n  }\n\nlogout(){\nthis._route.params.subscribe(\n  params=>{\n    let logout= +params['sure'];\n\n    if(logout== 1){\n      localStorage.removeItem('identity');\n      localStorage.removeItem('token');\n\n      this.identity=null;\n      this.token=null;\n\n      //redireccion a inicio\nthis._router.navigate(['inicio'])\n\n    }\n  }\n);\n}\n\n\n}\n","<div class=\"col-md-12 mt-3\">\n\n<h1>{{page_title}}</h1>\n\n<p>Identificate en la Plataforma</p>\n\n<form  class=\"col-md-5 ml-0 pl-0\" #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\n\n\n    <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" name=\"email\" class=\"form-control\"  #email=\"ngModel\" [(ngModel)]=\"user.email\" required  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" >\n        \n        <small *ngIf=\"!email.valid && email.touched\" class=\"invalid-feedback d-block\">El email no es valido</small>\n        </div>\n        \n        <div class=\"form-group\">\n        <label for=\"password\">Contraseña</label>\n        <input type=\"password\" name=\"password\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"user.password\" required>\n        \n        <small *ngIf=\"!password.valid && password.touched\" class=\"invalid-feedback d-block\">la contraseña no es valida</small>\n        </div>\n        \n        <input type=\"submit\" value=\"Identificarme\" class=\"btn btn-success\" [disabled]=\"loginForm.invalid\">\n        \n\n\n</form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from 'src/app/models/post';\nimport { PostService } from 'src/app/services/post.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n\n\n@Component({\n  selector: 'app-post-detail',\n  templateUrl: './post-detail.component.html',\n  styleUrls: ['./post-detail.component.css'],\n  providers:[\n    PostService,\n    UserService\n\n  ]\n})\nexport class PostDetailComponent implements OnInit {\n\n  public post:Post;\n  public status:string;\n  public identity;\n\n  constructor(\n    private _postService:PostService,\n    private _route:ActivatedRoute,\n    private _router:Router,\n    private _userService:UserService\n\n  ) {\n\n    this.identity=this._userService.getIdentity();\n   }\n\n  ngOnInit(): void {\n    this.getPost();\n  }\n\n  getPost():any{\n    //sacar el id del post desde la URL\nthis._route.params.subscribe(\n  params=>{\n    let id= Number(params['id']);\n\n\n//peticion ajax para sacar los datos\n\nthis._postService.getPost(id).subscribe(\nresponse=>{\nif (response.status==\"success\") {\n  this.post= response.post;\n\n  console.log(this.post);\n  \n}else{\n  this.status=\"error\";\n  \n}\n},\nerror=>{\n  console.log(<any>error);\n  this._router.navigate(['/inicio'])\n  \n}\n\n)\n\n\n  });\n\n\n  }\n\n \n\n}\n","<div class=\"col-md-12\" *ngIf=\"!post\">\nCargando...\n\n</div>\n\n<div class=\"col-md-12 mt-3\" *ngIf=\"post\">\n\n<h1>{{post.title}}</h1>\n\n\n<h3 *ngIf=\"post['category']\">{{post['category'].name}} -- <a [routerLink]=\"[ '/perfil', post.user_id]\">{{post['user'].name}}</a> </h3>\n   <hr/> \n   <p><span>{{post.content}}</span></p>\n   \n    <span *ngIf=\"identity && identity.sub == post.user_id\"> \n     <a [routerLink]=\"[ '/editar-entrada', post.id ]\" class=\"btn btn-warning\">Editar</a>\n    <a [routerLink]=\"[ '/inicio' ]\" class=\"btn btn-danger mr-2\">borrar</a> \n </span>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { UserService } from 'src/app/services/user.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { Post } from 'src/app/models/post';\nimport { global } from \"../../services/global\";\nimport { PostService } from 'src/app/services/post.service';\n\n\n\n@Component({\n  selector: 'app-post-edit',\n  templateUrl: '../post-new/post-new.component.html',\n  styleUrls: ['./post-edit.component.css'],\n  providers:[\n    UserService,\n    CategoryService,\n    PostService\n\n  ]\n})\nexport class PostEditComponent implements OnInit {\n\n \npublic page_title:string;\npublic identity;\npublic token;\npublic post:Post;\npublic categories;\npublic status;\npublic is_edit:boolean;\npublic url:string;\n\npublic afuConfig = {\n  multiple: false,\n  formatsAllowed: \".jpg,.png, .jpeg, .gif\",\n  maxSize: \"50\",\n  uploadAPI:  {\n    url:global.url+'post/upload',\n   \n    headers: {\n   \n  \"Authorization\" : this._userService.getToken()\n    },\n   \n  },\n  theme: \"attachPin\",\n \n  hideProgressBar: false,\n  hideResetBtn: true,\n  hideSelectBtn: false,\n  attachPinText: 'Sube tu avatar de Usuario'\n  \n};\n\n\npublic froala_options: Object = {\n  charCounterCount: true,\n  language: 'es',\n  toolbarButtons: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsXS: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsSM: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsMD: ['bold', 'italic', 'underline', 'paragraphFormat'],\n};\n\n\n\n  constructor(\nprivate _router:Router,\nprivate _route:ActivatedRoute,\nprivate _userService :UserService,\nprivate _categoryService:CategoryService,\nprivate _postService:PostService\n\n  ) { \n\n    this.page_title=\"Editar Entrada\";\n    this.identity= this._userService.getIdentity();\n    this.token= this._userService.getToken();\n    this.is_edit=true;\n    this.url=global.url\n  }\n\n  ngOnInit(): void {\n    this.post= new Post(1,this.identity.sub,1,'','',null, null);\nthis.getCategories();\nthis.getPost();\n  }\n\n\n  getPost(){\n    //sacar el id del post desde la URL\nthis._route.params.subscribe(\n  params=>{\n    let id= +params['id'];\n\n\n//peticion ajax para sacar los datos\n\nthis._postService.getPost(id).subscribe(\nresponse=>{\nif (response.status==\"success\") {\n\n  this.post= response.post;\n\nif (this.post.user_id != this.identity.sub) {\n  this._router.navigate(['/inicio'])\n}\n\n}else{\n  this.status=\"error\";\n  \n}\n},\nerror=>{\n  console.log(<any>error);\n  this._router.navigate(['/inicio'])\n  \n}\n\n)\n\n  });\n\n\n  }\n\n\n\n\n  getCategories():any{\n    this._categoryService.getCategories().subscribe(\n      response=>{\nif (response.status==\"success\") {\n  this.categories=response.categories;\n\n  \n}\n\n\n      },\n      error=>{\nconsole.log(<any>error);\n\n      }\n    )\n  }\n\n\n imageUpload(data){\n    let image_data=JSON.parse(data.response);\n     this.post.image= image_data.image; \n   }\n\n   onSubmit(form):any{\n\n    this._postService.update(this.token, this.post, this.post.id).subscribe(\n      response=>{\nif(response.status==\"success\"){\n  this.status=\"success\";\n  \n //redirigir a la pagina del post\n\n this._router.navigate(['/entrada', this.post.id])\n}else{\n  this.status= 'error'\n}\n\n      },\n      error=>{\nconsole.log(<any>error);\nthis.status=\"error\"\n\n      }\n    )\n}\ndeletePost(id){\n  \n}\n\n}\n","<div class=\"col-md-12 mt-3\">\n\n\n    <h2>{{page_title}}</h2>\n    \n    <p *ngIf=\"!is_edit\">\n      Agrega un Nuevo Articulo al Entrada\n    </p>\n    <p *ngIf=\"is_edit && post\">\n        Modifica tu entrada {{post.title}}\n      </p>\n    <hr>\n    \n    \n   <ng-container *ngIf=\"status== 'success'\">\n        <div class=\"alert alert-success\" role=\"alert\" > \n            La publicacion fue publicado con exito \n            </div>\n    </ng-container>\n    \n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"status== 'error'\"> \n       La publicacion no se Guardo\n            </div> \n    \n    \n    \n    <!-- Formulario de ajustes -->\n    \n    \n<form #postNew=\"ngForm\" class=\"col-md-5 ml-0 pl-0\"   (ngSubmit)=\"onSubmit(postNew)\" >\n\n<div class=\"form-group\">\n\n    <label for=\"title\">Titulo</label>\n    <input type=\"text\" class=\"form-control\" name=\"title\" #title=\"ngModel\" [(ngModel)]=\"post.title\" required> \n    <small *ngIf=\"!title.valid && title.touched\" class=\"invalid-feedback d-block\">\n        Titulo no es valido\n    </small>\n</div>\n\n<div class=\"form-group\">\n\n    <label for=\"content\">Contenido</label>\n    <textarea  type=\"text\"  name=\"content\" #content=\"ngModel\" [(ngModel)]=\"post.content\" required></textarea>\n   \n</div>\n\n<div class=\"form-group\">\n\n    <label for=\"category_id\">Categoria</label>\n   <select name=\"category_id\" #category_id=\"ngModel\" [(ngModel)]=\"post.category_id\" class=\"form-control\">\n<option *ngFor=\"let category_id of categories\" value=\"{{category_id.id}}\" >{{category_id.name}}</option>\n\n\n   </select>\n</div>\n\n\n\n<div class=\"form-group\">\n\n    <label for=\"image\">Subir Imagen</label>\n    <div *ngIf=\"is_edit==true && post.image\">\n      <img src=\"{{url+'post/image/' + post.image}}\" class=\"avatar_edit\">\n  </div>\n<angular-file-uploader\n[config]=\"afuConfig\"\n(ApiResponse)=\"imageUpload($event)\">\n</angular-file-uploader>\n    \n</div>\n\n<input type=\"submit\" value=\"Publicar\" class=\"btn btn-success\" [disabled]=\"!postNew.valid\">\n\n\n</form>\n<br>\n\n\n<button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#exampleModal\" *ngIf=\"is_edit==true && post\">\n    Eliminar\n  </button>\n  \n  <!-- Modal -->\n  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" >\n    <div class=\"modal-dialog\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">Eliminar Post</h5>\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          Realmente desea eliminar la Publicacion?\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\n          <a (click)=\"deletePost(post.id)\" class=\"btn btn-danger\">SI, Eliminar</a>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n\n    \n<br>\n    \n    \n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { UserService } from 'src/app/services/user.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { Post } from 'src/app/models/post';\nimport { global } from \"../../services/global\";\nimport { PostService } from 'src/app/services/post.service';\n\n\n@Component({\n  selector: 'app-post-new',\n  templateUrl: './post-new.component.html',\n  styleUrls: ['./post-new.component.css'],\n  providers:[\n    UserService,\n    \n    PostService\n\n  ]\n})\nexport class PostNewComponent implements OnInit {\n\npublic page_title:string;\npublic identity;\npublic token;\npublic post:Post;\npublic categories;\npublic status;\npublic is_edit;\npublic url;\n\n\npublic afuConfig = {\n  multiple: false,\n  formatsAllowed: \".jpg,.png, .jpeg, .gif\",\n  maxSize: \"50\",\n  uploadAPI:  {\n    url:global.url+'post/upload',\n   \n    headers: {\n   \n  \"Authorization\" : this._userService.getToken()\n    },\n   \n  },\n  theme: \"attachPin\",\n \n  hideProgressBar: false,\n  hideResetBtn: true,\n  hideSelectBtn: false,\n  attachPinText: 'Sube tu avatar de Usuario'\n  \n};\n\npublic froala_options: Object = {\n  charCounterCount: true,\n  language: 'es',\n  toolbarButtons: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsXS: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsSM: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsMD: ['bold', 'italic', 'underline', 'paragraphFormat'],\n};\n\n\n  constructor(\nprivate _router:Router,\nprivate _route:ActivatedRoute,\nprivate _userService :UserService,\nprivate _categoryService:CategoryService,\nprivate _postService:PostService\n\n  ) { \n\n    this.page_title=\"Crear una Entrada\";\n    this.identity= this._userService.getIdentity();\n    this.token= this._userService.getToken();\n    this.is_edit=false;\n    this.url=global.url\n  }\n\n  ngOnInit(): void {\n    this.post= new Post(1,this.identity.sub,1,'','',null, null);\nthis.getCategories();\n  }\n\n  getCategories():any{\n    this._categoryService.getCategories().subscribe(\n      response=>{\nif (response.status==\"success\") {\n  this.categories=response.categories;\n\n  \n}\n\n\n      },\n      error=>{\nconsole.log(<any>error);\n\n      }\n    )\n  }\n\n\n imageUpload(data){\n    let image_data=JSON.parse(data.response);\n     this.post.image= image_data.image; \n   }\n\n   onSubmit(form):any{\nthis._postService.create(this.token, this.post).subscribe(\n  response=>{\n\nif(response.status==\"success\"){\n\n\n  this.post= response.post,\n  this.status=\"success\";\n  this._router.navigate(['/inicio']);\n}else{\n  this.status=\"error\"\n}\n\n  },\n  error=>{\n    console.log(<any>error);\n    this.status=\"error\"\n  }\n)\n  }\n\n\n  deletePost(id){\n    this._postService.delete(this.token, id).subscribe(\n      response=>{\n  this._router.navigate(['/inicio']);\n      },\n      error=>{\n        console.log(error);\n        \n      }\n    )\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from 'src/app/models/post';\nimport { PostService } from 'src/app/services/post.service';\nimport { global } from \"../../services/global\";\nimport { UserService } from 'src/app/services/user.service';\nimport { ActivatedRoute, Router, Params } from '@angular/router';\nimport { User } from 'src/app/models/user';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  providers:[\n    PostService,\n    UserService\n    \n      ]\n})\nexport class ProfileComponent implements OnInit {\n\n  public page_title:string;\npublic url:string;\npublic posts: Array<Post>;\npublic identity;\npublic token;\npublic user:User;\n\n  constructor(\n    private _postService: PostService,\n    private _userService:UserService,\n    private _route:ActivatedRoute,\n    private _router: Router\n  ) { \n\n    this.page_title=\"Perfil de usuario\";\n    this.url=global.url;\n    this.identity= this._userService.getIdentity();\n    this.token=this._userService.getToken();\n  }\n\n  ngOnInit(): void {\n  this.getprofile()\n}\n\n\ngetprofile(){\n    //sacar el id del post desde la URL\nthis._route.params.subscribe(\n  params=>{\n    let userId= +params['id'];\n    this.getUser(userId);\n    this.getposts(userId);\n  })\n}\n\ngetUser(userId){\n\nthis._userService.getUser(userId).subscribe(\n  response=>{\n  if (response.status==\"success\") {\n    \n  this.user=response.user;  \n    \n  }\n  },\n  error=>{\n  console.log(<any>error);\n  \n  \n  }\n  \n      );\n}\n\n  getposts(userId){\n    this._userService.getPosts(userId).subscribe(\nresponse=>{\nif (response.status==\"success\") {\n  \nthis.posts=response.posts;\n\n\n\n}\n},\nerror=>{\nconsole.log(<any>error);\n\n\n}\n\n    );\n  }\n\n\n\n  deletePost(id){\n    this._postService.delete(this.token, id).subscribe(\n      response=>{\n  this._router.navigate(['/inicio']);\n      },\n      error=>{\n        console.log(error);\n        \n      }\n    )\n  }\n\n}\n","<div class=\"loading\" *ngIf=\"!posts\">\n    Cargando...\n    \n    </div>\n    \n    <div class=\"container-fluid mt-3\" *ngIf=\"posts\">\n    <h1>{{page_title}}</h1>\n<div class=\"user-card float-left\">\n    <h2>Perfil de {{user.name + ' '+user.surname}} </h2>\n    <div *ngIf=\"identity && identity.image\" class=\"ml-3 mr-3\">\n        <img src=\"{{url+ 'user/avatar/'+user.image}}\" style=\" vertical-align: middle;\n        width: 90px;\n        height: 90px;\n        border-radius: 50%;\">\n    </div>\n    <p [innerHTML]=\"user.description\"></p>\n</div>\n\n<div class=\"clearfix\"></div>\n    <div class=\"card-colums\">\n    \n        <article class=\"card w-100\" *ngFor=\"let post of posts\">\n    <div class=\"card-header\">\n            <h3><a [routerLink]=\"[ '/entrada', post.id]\">{{post.title}}</a></h3>\n    </div>\n    \n    <div class=\"card-body\">\n    <!-- imagen -->\n    <div class=\"post-image w-100\" *ngIf=\"post.image\">\n    <img src=\"{{url+'post/image/' + post.image}}\" class=\"w-100\">\n    </div>\n    <div class=\"post-image w-100\" *ngIf=\"!post.image\">\n        <img src=\"https://via.placeholder.com/500x300\" class=\"w-100\">\n        </div>\n    <!-- Botones de Accion -->\n    <div class=\"post-buttons mt-5\">\n    \n        <a [routerLink]=\"[ '/entrada', post.id ]\" class=\"btn btn-info mr-2\">Leer</a>\n    \n    </div>\n    \n    </div>\n        </article>\n    </div>\n    \n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from \"../../models/user\";\nimport { UserService } from \"../../services/user.service\";\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n  providers: [\n    UserService\n  ]\n})\nexport class RegisterComponent implements OnInit {\n  public page_title: string;\n  public user: User;\n  public status: string;\n  constructor(private _userService: UserService) {\n\n    this.page_title = \"Registrate\";\n\n    this.user = new User(1, '', '', 'user', '', '', '', '');\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form) {\n    this._userService.register(this.user).subscribe(\n\n      response => {\n        if (response.status == \"success\") {\n          this.status = response.status;\n          form.reset()\n        } else {\n          this.status = \"error\"\n        }\n\n      },\n      error => {\n        console.log(<any>error);\n        this.status = \"error\"\n      }\n    );\n\n\n\n\n  }\n\n}\n","<div class=\"col-md-12 mt-3\">\n\n\n<h2>{{page_title}}</h2>\n\n<p *ngIf=\"status!= 'success'\">\n    Registrate en nuestra plataforma para publicar entradas\n</p>\n\n\n<ng-container *ngIf=\"status== 'success'\">\n    <div class=\"alert alert-success\" role=\"alert\" > \n        Se ha registrado Correctamente  <a [routerLink]=\"[ '/login']\">Iniciar sesion AQUI</a>\n        </div>\n</ng-container>\n\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"status== 'error'\"> \n      Error! No se ha podido registrar\n        </div> \n\n\n\n<!-- Formulario de registro -->\n\n<form action=\"\" class=\"col-md-5 ml-0 pl-0\" #registerForm=\"ngForm\" (ngSubmit)=\"onSubmit(registerForm)\">\n<div class=\"form-group\">\n<label for=\"name\">Nombre</label>\n<input type=\"text\" name=\"name\" class=\"form-control\" #name=\"ngModel\" [(ngModel)]=\"user.name\" required pattern=\"[a-zA-Z ]+\">\n\n<small *ngIf=\"!name.valid && name.touched\" class=\"invalid-feedback d-block\">El nombre no es valido</small>\n\n</div>\n\n<div class=\"form-group\">\n<label for=\"surname\">Apellido</label>\n<input type=\"text\" name=\"surname\" class=\"form-control\" #surname=\"ngModel\" [(ngModel)]=\"user.surname\" required pattern=\"[a-zA-Z ]+\">\n\n<small *ngIf=\"!surname.valid && surname.touched\" class=\"invalid-feedback d-block\">Los Apellido/s no son validos</small>\n</div>\n\n<div class=\"form-group\">\n<label for=\"email\">Email</label>\n<input type=\"email\" name=\"email\" class=\"form-control\"  #email=\"ngModel\" [(ngModel)]=\"user.email\" required  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" >\n\n<small *ngIf=\"!email.valid && email.touched\" class=\"invalid-feedback d-block\">El email no es valido</small>\n</div>\n\n<div class=\"form-group\">\n<label for=\"password\">Contraseña</label>\n<input type=\"password\" name=\"password\" class=\"form-control\" #password=\"ngModel\" [(ngModel)]=\"user.password\" required>\n\n<small *ngIf=\"!password.valid && password.touched\" class=\"invalid-feedback d-block\">la contraseña no es valida</small>\n</div>\n\n<input type=\"submit\" value=\"Registrarme!\" class=\"btn btn-success\" [disabled]=\"registerForm.invalid\">\n\n</form>\n\n\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { global } from \"../../services/global\";\n\n\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css'],\n  providers:[\n    UserService\n  ]\n})\nexport class UserEditComponent implements OnInit {\npublic page_title:string;\npublic user:User;\npublic identity;\npublic token;\npublic status;\npublic url;\n\n\npublic afuConfig = {\n  multiple: false,\n  formatsAllowed: \".jpg,.png, .jpeg, .gif\",\n  maxSize: \"50\",\n  uploadAPI:  {\n    url:global.url+'user/upload',\n   \n    headers: {\n   \n  \"Authorization\" : this._userService.getToken()\n    },\n   \n  },\n  theme: \"attachPin\",\n \n  hideProgressBar: false,\n  hideResetBtn: true,\n  hideSelectBtn: false,\n  attachPinText: 'Sube tu avatar de Usuario'\n  \n};\n\npublic froala_options: Object = {\n  charCounterCount: true,\n  language: 'es',\n  toolbarButtons: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsXS: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsSM: ['bold', 'italic', 'underline', 'paragraphFormat'],\n  toolbarButtonsMD: ['bold', 'italic', 'underline', 'paragraphFormat'],\n};\n\n  constructor( \n    private _userService: UserService\n  ) { \nthis.page_title=\"Ajustes\";\nthis.user = new User(1, '', '', 'user', '', '', '', '');\nthis.url=global.url;\n\nthis.identity=this._userService.getIdentity();\nthis.token= this._userService.getToken();\n\n//rellenar objeto  usuario para mostrarlo en editar\n\nthis.user = new User(\n  this.identity.sub,\n   this.identity.name, this.identity.surname, 'user', this.identity.email, '', this.identity.description, this.identity.image);\n\n\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  onSubmit(form){\n    \nthis._userService.update(this.token, this.user).subscribe(\n  response=>{\n\n    if (response && response.status) {\n      this.status=\"success\";\nconsole.log(response);\n\n      //actualizar usuario en sesion\n\n      if(response.changes.name){\nthis.user.name=response.changes.name;\n      }\n\n      if(response.changes.surname){\n        this.user.surname=response.changes.surname;\n              }\n              \n      if(response.changes.email){\n        this.user.email=response.changes.email;\n              }\n              \n      if(response.changes.description){\n        this.user.description=response.changes.description;\n              }\n\n              if(response.changes.image){\n                this.user.image=response.changes.image;\n                      }\n\n\n\n      this.identity=this.user;\n      localStorage.setItem('identity', JSON.stringify(this.identity));\n\n    }\n    else{\n\n      \nthis.status=\"error\"\n    }\n    console.log(response);\n    \n\n  },\n  error=>{\n    console.log(<any>error);\n    this.status=\"error\";\n    \n  }\n)\n  }\n\n\navatarUpload(datos){\n let data=JSON.parse(datos.response);\n  this.user.image= data.image; \n}\n\n\n\n\n}\n","<div class=\"col-md-12 mt-3\">\n\n\n    <h2>{{page_title}}</h2>\n    \n    <p *ngIf=\"status!= 'success'\">\n        Modifica tus Datos personales de usuario\n    </p>\n    <hr>\n    \n    \n   <ng-container *ngIf=\"status== 'success'\">\n        <div class=\"alert alert-success\" role=\"alert\" > \n            Los datos se han guardado correctamente  \n            </div>\n    </ng-container>\n    \n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"status== 'error'\"> \n       Los datos no se han guardado\n            </div> \n    \n    \n    \n    <!-- Formulario de ajustes -->\n    \n    <form action=\"\" class=\"col-md-5 ml-0 pl-0\" #userEditForm=\"ngForm\" (ngSubmit)=\"onSubmit(userEditForm)\">\n    <div class=\"form-group\">\n    <label for=\"name\">Nombre</label>\n    <input type=\"text\" name=\"name\" class=\"form-control\" #name=\"ngModel\" [(ngModel)]=\"user.name\" required pattern=\"[a-zA-Z ]+\">\n    \n    <small *ngIf=\"!name.valid && name.touched\" class=\"invalid-feedback d-block\">El nombre no es valido</small>\n    \n    </div>\n    \n    <div class=\"form-group\">\n    <label for=\"surname\">Apellido</label>\n    <input type=\"text\" name=\"surname\" class=\"form-control\" #surname=\"ngModel\" [(ngModel)]=\"user.surname\" required pattern=\"[a-zA-Z ]+\">\n    \n    <small *ngIf=\"!surname.valid && surname.touched\" class=\"invalid-feedback d-block\">Los Apellido/s no son validos</small>\n    </div>\n    \n    <div class=\"form-group\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" name=\"email\" class=\"form-control\"  #email=\"ngModel\" [(ngModel)]=\"user.email\" required  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" >\n    \n    <small *ngIf=\"!email.valid && email.touched\" class=\"invalid-feedback d-block\">El email no es valido</small>\n    </div>\n    \n    <div class=\"form-group\">\n        <label for=\"description\">Biografia</label>\n        <textarea  type=\"text\" name=\"description\" class=\"form-control\" #description=\"ngModel\" [(ngModel)]=\"user.description\" ></textarea>\n        \n       \n        </div>\n\n\n        <div class=\"form-group\">\n            <label for=\"image\">Avatar</label>\n  <div *ngIf=\"identity && identity.image\">\n                <img src=\"{{url+ 'user/avatar/'+identity.image}}\" class=\"avatar_edit\">\n            </div>\n            \n            <angular-file-uploader\n      [config]=\"afuConfig\"\n    \n      (ApiResponse)=\"avatarUpload($event)\">\n      >\n\n</angular-file-uploader>\n            \n           \n            </div>\n    \n    \n    <input type=\"submit\" value=\"Guardar Cambios\" class=\"btn btn-success\" [disabled]=\"userEditForm.invalid\">\n    \n    </form>\n    \n<br>\n    \n    \n    </div>\n","export class Category{\r\n\r\n    constructor(\r\npublic id:number,\r\npublic name:string\r\n\r\n    ){}\r\n}","export class Post{\r\n\r\nconstructor(\r\npublic id:number,\r\npublic user_id:number,\r\npublic category_id:number,\r\npublic title:string,\r\npublic content:string,\r\npublic image:string,\r\npublic created_at:any\r\n    \r\n){\r\n\r\n}\r\n}","import { stringify } from 'querystring'\r\n\r\nexport class User{\r\n\r\n    constructor(\r\n\r\n        public id:Number,\r\n        \r\n        public name:string,\r\n        public surname:string,\r\n        public role:string,\r\n        public email:string,\r\n        public password:string,\r\n        public description:string,\r\n        public image:string\r\n\r\n\r\n    ){    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { User } from \"../models/user\";\nimport { global } from \"./global\";\nimport { stringify } from 'querystring';\n\nimport { Category } from '../models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  public url:string;\n \n  \n  \n    constructor(\n  public _http:HttpClient\n  \n    ) { \n  \n      this.url=global.url;\n    }\n\n    create(token, category):any{\nlet json= JSON.stringify(category);\nlet params= \"json=\"+json;\n\n\nlet headers=new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n\nreturn this._http.post(this.url+'category', params, {headers:headers});\n    }\n\n\n    getCategories():any{\n      let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\nreturn this._http.get(this.url+\"category\", {headers:headers});\n\n    }\n\n    getCategory(id):any{\n      let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\nreturn this._http.get(this.url+\"category/\"+id, {headers:headers});\n\n    }\n\n    getPosts(id):any{\n      let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\nreturn this._http.get(this.url+\"post/category/\"+id, {headers:headers});\n\n    }\n\n  }","export var global={\r\nurl: 'https://joli-madame-35697.herokuapp.com/',\r\n\r\n htmlEntities: function(str) {\r\n    return String(str).replace('&ntilde;', 'ñ')\r\n                      .replace('&Ntilde;', 'Ñ')\r\n                      .replace('&amp;', '&')\r\n                      .replace('&Ntilde;', 'Ñ')\r\n                      .replace('&ntilde;', 'ñ')\r\n                      .replace('&Ntilde;', 'Ñ')\r\n                      .replace('&Agrave;', 'À')\r\n                      .replace('&Aacute;', 'Á')  \r\n                      .replace('&Acirc;','Â')\r\n                      .replace('&Atilde;','Ã')   \r\n                      .replace('&Auml;','Ä')\r\n                      .replace('&Aring;','Å')\r\n                      .replace('&AElig;','Æ')\r\n                      .replace('&Ccedil;','Ç')\r\n                      .replace('&Egrave;','È')\r\n                      .replace('&Eacute;','É')\r\n                      .replace('&Ecirc;', 'Ê')\r\n                      .replace('&Euml;','Ë')\r\n                      .replace(   '&Igrave;', 'Ì')\r\n                      .replace('&Iacute;', 'Í'    )\r\n                      .replace('&Icirc;', 'Î' )\r\n                      .replace(   '&Iuml;', 'Ï')\r\n                      .replace(   '&ETH;', 'Ð')\r\n                      .replace(   '&Ntilde;', 'Ñ')\r\n                      .replace(   '&Ograve;', 'Ò')\r\n                      .replace(   '&Oacute;', 'Ó')\r\n                      .replace('&Ocirc;', 'Ô' )\r\n                      .replace(   '&Otilde;', 'Õ')\r\n                      .replace('&Ouml;', 'Ö'  )\r\n                      .replace('&Oslash;', 'Ø'    )\r\n                      .replace(   '&Ugrave;' ,'Ù')\r\n                      .replace(   '&Uacute;', 'Ú')\r\n                      .replace(   '&Ucirc;', 'Û')\r\n                      .replace(   '&Uuml;', 'Ü')\r\n                      .replace(   '&Yacute;', 'Ý')\r\n                      .replace('&THORN;', 'Þ' )\r\n                      .replace(   '&szlig;', 'ß')\r\n                      .replace(   '&agrave;', 'à')\r\n                      .replace(   '&aacute;', 'á')\r\n                      .replace(   '&acirc;', 'â')\r\n                      .replace(   '&atilde;', 'ã')\r\n                      .replace('&auml;', 'ä'  )\r\n                      .replace(   '&aring;', 'å')\r\n                      .replace(   '&aelig;', 'æ')\r\n                      .replace(   '&ccedil;', 'ç')\r\n                      .replace('&egrave;', 'è'    )\r\n                      .replace('&eacute;', 'é'    )\r\n                      .replace('&ecirc;', 'ê' )\r\n                      .replace('&euml;', 'ë'  )\r\n                      .replace(   '&igrave;', 'ì')\r\n                      .replace('&iacute;', 'í'    )\r\n                      .replace('&icirc;', 'î' )\r\n                      .replace('&iuml;', 'ï'  )\r\n                      .replace('&eth;', 'ð'   )\r\n                      .replace(   '&ntilde;', 'ñ')\r\n                      .replace('&ograve;','ò')\r\n                      .replace('&oacute;','ó')\r\n                      .replace('&ocirc;','ô')\r\n                      .replace('&otilde;','õ')\r\n                      .replace('&ouml;','ö')\r\n                      .replace('&oslash;','ø')\r\n                      .replace('&ugrave;','ù')\r\n                      .replace('&uacute;','ú')\r\n                      .replace('&ucirc;','û')\r\n                      .replace('&uuml;' , 'ü')   \r\n                      .replace('&yacute;', 'ý')  \r\n                      .replace('&thorn;', 'þ')\r\n                      .replace('&yuml;', 'ÿ')\r\n                      .replace('&bnsp', '')\r\n                      .replace('bnsp', '')\r\n                      .replace('&', '');\r\n  }\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityGuard implements CanActivate {\n\n\nconstructor(\nprivate _router:Router,\nprivate _userService:UserService\n\n){\n\n}\n\n  canActivate(){\n\n    \n  \n    let identity= this._userService.getIdentity();\n    if(identity){\n\n      return true;\n    }else{\n      this._router.navigate(['/error']);\n      return false;\n    \n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Post } from \"../models/post\";\nimport { global } from \"./global\";\nimport { stringify } from 'querystring';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  public url:string;\n \n  \n  \n  constructor(\npublic _http:HttpClient\n\n  ) { \n\n    this.url=global.url;\n  }\n\n  pruebas(){\nreturn \"hola desde el servicio de post\"\n\n  }\n  create(token, post):any{\n    //limpiar campo content que viene desde el editor de texto froala\n    post.content=global.htmlEntities(post.content);\nlet json= JSON.stringify(post);\n\nlet params= \"json=\"+json;\n\n\nlet headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n\nreturn this._http.post(this.url+'post', params, {headers:headers})\n\n  }\n\n  getPosts():any{\n    let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this._http.get(this.url+ 'post', {headers:headers})\n  }\n\n  getPost(id):any{\n\n    let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\n    return this._http.get(this.url+ 'post/'+id, {headers:headers})\n\n  }\n\n\n  update(token, post, id):any{\n //limpiar campo content que viene desde el editor de texto froala\n post.content=global.htmlEntities(post.content);\nlet json= JSON.stringify(post);\nlet params= \"json=\"+json;\nlet headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n\nreturn this._http.put(this.url+'post/'+id, params, {headers:headers})\n\n  }\n\n  delete(token, id){\n    let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n\n    return this._http.delete(this.url+'post/'+id, {headers:headers});\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { User } from \"../models/user\";\nimport { global } from \"./global\";\nimport { stringify } from 'querystring';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\npublic url:string;\npublic identity;\npublic token;\n\n\n  constructor(\npublic _http:HttpClient\n\n  ) { \n\n    this.url=global.url;\n  }\n\ntest(){\n\n  console.log(\"hola mundo desde un service\");\n  \n}\n\nregister(user):any{\nlet json= JSON.stringify(user);\n\nlet params= 'json='+json;\nlet headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\nreturn this._http.post(this.url+\"user/register\", params,{headers:headers})\n\n\n}\n\nsignup(user, gettoken=null): any{\nif(gettoken !=null){\n  user.gettoken=true;\n}\n\nlet json= JSON.stringify(user);\nlet params='json='+json;\nlet headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\nreturn this._http.post(this.url+\"user/login\", params, {headers:headers} )\n\n}\n\ngetIdentity(){\nlet identity= JSON.parse(localStorage.getItem('identity'));\nif(identity &&identity!= \"undefined\"){\nthis.identity=identity;\n\n}else{\n  this.identity=null;\n}\n\nreturn this.identity;\n}\n\ngetToken(){\nlet token= localStorage.getItem('token');\n\nif(token != \"undefined\"){\n  this.token= token;\n\n}else{\n  this.token=null;\n}\n\nreturn this.token;\n\n}\n\nupdate( token, user):Observable<any>{\n\n//limpiar campo content que viene desde el editor de texto froala\nuser.description=global.htmlEntities(user.description);\n\n  let json= JSON.stringify(user);\n  let params= \"json=\"+json;\n\n  let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded').set('Authorization', token);\n\n\n  return this._http.put(this.url+'user/', params, {headers:headers})\n\n}\n\navatarUpload(datos){\n  let data=datos.response;\n  this.identity.image= data.image; \n\n}\n\ngetPosts(id):any{\n  let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\nreturn this._http.get(this.url+\"post/user/\"+id, {headers:headers});\n\n}\n\ngetUser(id):any{\n  let headers= new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n\nreturn this._http.get(this.url+\"user/detail/\"+id, {headers:headers});\n\n\n\n\n\n\n}\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}